# SCsub

import platform as p
Import('env')

sources = [
    "register_types.cpp",
    "godotcord.cpp",
    "godotcord_network_peer.cpp",
    "godotcord_achievement_manager.cpp",
    "godotcord_activity_manager.cpp",
    "godotcord_lobby_manager.cpp",
    "godotcord_image_manager.cpp",
    "godotcord_overlay_manager.cpp",
    "godotcord_relationship_manager.cpp",
    "godotcord_storage_manager.cpp",
    "godotcord_store_manager.cpp",
    "godotcord_user_manager.cpp",
    "godotcord_voice_manager.cpp",
    "discord-files/achievement_manager.cpp",
    "discord-files/activity_manager.cpp",
    "discord-files/application_manager.cpp",
    "discord-files/core.cpp",
    "discord-files/image_manager.cpp",
    "discord-files/lobby_manager.cpp",
    "discord-files/network_manager.cpp",
    "discord-files/overlay_manager.cpp",
    "discord-files/relationship_manager.cpp",
    "discord-files/storage_manager.cpp",
    "discord-files/store_manager.cpp",
    "discord-files/types.cpp",
    "discord-files/user_manager.cpp",
    "discord-files/voice_manager.cpp"
]


def detect_platform_for_server(platform_string):
    switcher = {
        'Linux': 'x11',
        'Darwin': 'osx',
        'Windows': 'windows'
    }
    return switcher.get(platform_string, "Invalid platform")


platform = env["platform"]

def set_linker_vars():
    if platform == "windows":
        env.add_source_files(env.modules_sources, sources)
        env.Append(LIBPATH=['#modules/godotcord/libpath'])
        if env["bits"] == "64":
            env.Append(LINKFLAGS=['discord_game_sdk.dll.lib'])
        elif env["bits"] == "32":
            env.Append(LINKFLAGS=['discord_game_sdk.32.dll.lib'])
    elif(platform == "x11"):
        if env["bits"] == "64":
            env.add_source_files(env.modules_sources, sources)
            env.Append(LIBPATH=['#modules/godotcord/libpath'])
            env.Append(RPATH=[Literal("\$$ORIGIN:.")])
            env.Append(LIBS=['discord_game_sdk'])
    elif(platform == "osx"):
        env.add_source_files(env.modules_sources, sources)
        env.Append(LIBPATH=['#modules/godotcord/libpath'])
        env.Append(LIBS=['discord_game_sdk'])
        env.Append(LINKFLAGS=["-Wl,-rpath,@executable_path"])


if env["platform"] != "server":
    set_linker_vars()
else:
    print(p.system())
    platform = detect_platform_for_server(p.system())
    set_linker_vars()
